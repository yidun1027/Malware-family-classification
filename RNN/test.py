from common.read_feature_from_db import act_dataset_read_api_frequency
from common.read_feature_from_db import act_dataset_api_calls_to_ids
from common.read_feature_from_db import act_dataset_tf_idf
from common.read_feature_from_db import translate_api_to_txt
from common.read_feature_from_db import count_api_num,combo_num,count_api_num
from common.sklearn_classify import try_model
from sklearn.model_selection import train_test_split
from time import *
from sklearn.decomposition import PCA

from sklearn import preprocessing
# export PYTHONPATH=$PYTHONPATH:/home/dell/tmy_repos/malware_detection_code/

def act_dataset():
    begin_time = time()
    x, y=combo_num()
    x = preprocessing.scale(x)
    print(x.mean(axis=0))
    # X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42, shuffle=True)

    # print("begin PCA")
    # pca = PCA(n_components=300)
    # pca.fit(x)
    # x = pca.transform(x)
    # print("finish PCA")
    X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42, shuffle=True)

    print("train:", len(X_train))
    print("test:", len(X_test))
    try_model(X_train, X_test, y_train, y_test)
    end_time = time()
    run_time = end_time - begin_time
    print('runtime costï¼š', run_time)

act_dataset()

# nohup python3 -u  test.py  > nohup.log 2>&1 &