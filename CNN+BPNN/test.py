import os
import numpy as np
from keras.models import load_model
from keras.utils import to_categorical
from data_preprocess import get_data, train_test_split, get_all_csv
model = load_model('../saved/malcbrnn34.h5')
model.summary()
# x_train=[]
# x_test=[]
# model_name = 'malcbrnn15.h5'
# print('%s Train on %d data, test on %d data' % (model_name, len(x_train), len(x_test)))
def del_adjacent(iterable):
	prev = object()
	for iterm in iterable:
		if iterm != prev:
			prev = iterm
			yield iterm


def getdata(data_path):
	fr = open(data_path, 'r+')
	data_lines = fr.readlines()
	fr.close()
	len_list = np.zeros(len(data_lines), )
	worddict = {}
	maxnum = index = 0
	for i, data in enumerate(data_lines):
		values = [x for x in data.replace('\n', '').split(',')]
		values = list(del_adjacent(values))
		len_list[i] = len(values)
		for value in values:
			if int(value) > maxnum:
				maxnum = int(value)
			if not value in worddict:
				worddict[value] = index
				index += 1
	print(index, len_list.mean(), maxnum)
	len_list.sort()
	half = len(len_list) // 2
	print((len_list[half] + len_list[~half])//2)
	return len_list
# data_dir = 'E:\\college\\Graduation_project\\dataset'
# datafname = os.path.join(data_dir, '1000_calls.txt')
# labelfname = os.path.join(data_dir, 'labels.txt')
# float_data, labels= get_data(datafname,labelfname)
# labels = to_categorical(labels)
# test_mse_score, test_mae_score = model.evaluate(float_data, labels)
# print(test_mse_score, test_mae_score)

filename = 'E:\\college\\Graduation_project\\dataset\\calls.csv'
float_data, labels = get_all_csv(filename)
test_mse_score, test_mae_score = model.evaluate(float_data, labels)
print(test_mse_score, test_mae_score)